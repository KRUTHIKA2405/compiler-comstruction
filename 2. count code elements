#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// List of C keywords
const char *keywords[] = {
    "auto","break","case","char","const","continue","default","do","double",
    "else","enum","extern","float","for","goto","if","inline","int","long",
    "register","restrict","return","short","signed","sizeof","static","struct",
    "switch","typedef","union","unsigned","void","volatile","while","_Bool",
    "_Complex","_Imaginary"
};
int num_keywords = sizeof(keywords)/sizeof(keywords[0]);

int isKeyword(const char *word) {
    for (int i = 0; i < num_keywords; i++) {
        if (strcmp(word, keywords[i]) == 0)
            return 1;
    }
    return 0;
}

int main() {
    FILE *fp;
    char filename[100], ch;
    int lines = 0, spaces = 0, words = 0, keywords_count = 0, identifiers = 0, comments = 0;

    printf("Enter filename: ");
    scanf("%s", filename);

    fp = fopen(filename, "r");
    if (fp == NULL) {
        printf("Could not open file %s\n", filename);
        return 1;
    }

    char buffer[1000];
    while (fgets(buffer, sizeof(buffer), fp)) {
        lines++;

        for (int i = 0; buffer[i]; i++) {
            if (buffer[i] == ' ')
                spaces++;
        }

        // Comment check
        if (strstr(buffer, "//")) {
            comments++;
        }
        if (strstr(buffer, "/*")) {
            comments++;
        }

        // Tokenize words
        char *token = strtok(buffer, " \t\n;(){}[]<>=+-/*,");
        while (token) {
            words++;
            if (isKeyword(token))
                keywords_count++;
            else if (isalpha(token[0]) || token[0] == '_')
                identifiers++;
            token = strtok(NULL, " \t\n;(){}[]<>=+-/*,");
        }
    }

    fclose(fp);

    printf("Lines: %d\n", lines);
    printf("Spaces: %d\n", spaces);
    printf("Words: %d\n", words);
    printf("Keywords: %d\n", keywords_count);
    printf("Identifiers: %d\n", identifiers);
    printf("Comments: %d\n", comments);

    return 0;
}
